{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Transform":"AWS::Serverless-2016-10-31",
   "Description":"An AWS Serverless Application that uses the ASP.NET Core framework running in Amazon Lambda using Amazon API Gateway's HTTP APIs.",
   "Parameters":{
      "DomainName":{
         "Type":"String",
         "Description":"The fully qualified domain name the API will live at."
      },
      "CertificateArn":{
         "Type":"String",
         "Description":"The ACM Certificate ARN of the domain name."
      },
      "HostedZoneId":{
         "Type":"String",
         "Description":"The Hosted Zone ID of the domain name to create the A Alias record."
      }
   },
   "Resources":{
      "AspNetCoreFunction":{
         "Type":"AWS::Serverless::Function",
         "Properties":{
            "Handler":"MyHttpGatewayApi::MyHttpGatewayApi.LambdaEntryPoint::FunctionHandlerAsync",
            "Runtime":"dotnetcore3.1",
            "CodeUri":"",
            "MemorySize":256,
            "Timeout":30,
            "Role":null,
            "Policies":[
               "AWSLambdaFullAccess"
            ],
            "Events":{
               "ProxyResource":{
                  "Type":"HttpApi",
                  "Properties":{
                     "Path":"/{proxy+}",
                     "Method":"ANY"
                  }
               },
               "RootResource":{
                  "Type":"HttpApi",
                  "Properties":{
                     "Path":"/",
                     "Method":"ANY"
                  }
               },
               "APIWarmingSchedule":{
                  "Type":"Schedule",
                  "Properties":{
                     "Schedule":"rate(4 minutes)",
                     "Input":"{ \"RouteKey\": \"WarmingLambda\", \"Body\": \"3\" }"
                  }
               }
            }
         }
      },
      "ApiGatewayDomainName":{
         "Type":"AWS::ApiGatewayV2::DomainName",
         "Properties":{
            "DomainName":{
               "Ref":"DomainName"
            },
            "DomainNameConfigurations":[
               {
                  "EndpointType":"REGIONAL",
                  "CertificateArn":{
                     "Ref":"CertificateArn"
                  }
               }
            ]
         }
      },
      "ApiGatewayBasePathMapping":{
         "Type":"AWS::ApiGatewayV2::ApiMapping",
         "DependsOn":[
            "AspNetCoreFunction",
            "ApiGatewayDomainName"
         ],
         "Properties":{
            "ApiId":{
               "Fn::Sub":"${ServerlessHttpApi}"
            },
            "DomainName":{
               "Ref":"DomainName"
            },
            "Stage":{
               "Fn::Sub":"${ServerlessHttpApiApiGatewayDefaultStage}"
            }
         }
      },
      "DNSRecordA":{
         "Type":"AWS::Route53::RecordSet",
         "DependsOn":[
            "AspNetCoreFunction",
            "ApiGatewayDomainName"
         ],
         "Properties":{
            "HostedZoneId":{
               "Ref":"HostedZoneId"
            },
            "Name":{
               "Ref":"DomainName"
            },
            "Type":"A",
            "AliasTarget":{
               "HostedZoneId":{
                  "Fn::GetAtt":[
                     "ApiGatewayDomainName",
                     "RegionalHostedZoneId"
                  ]
               },
               "DNSName":{
                  "Fn::GetAtt":[
                     "ApiGatewayDomainName",
                     "RegionalDomainName"
                  ]
               }
            }
         }
      }
   },
   "Outputs":{
      "ApiURL":{
         "Description":"API endpoint URL",
         "Value":{
            "Fn::Sub":"https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
         }
      }
   }
}